//////////////////////////////////////////////////////////////////// -- INITIALIZING & RANDOM -- /////////////////////////////////////////////////////////////////////////
// Config file for Didymos Optimization Project
// For more in-depth information, refer to config_readme.md
// nvcc -ccbin "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.22.27905\bin\Hostx64\x64\cl.exe" -o test optimization.cu -arch=compute_50 -code=sm_50

time_seed=NONE          // Randomization seed, set to NONE for time(0) as seed
max_generations=8001   // Set maximum number of generations for the optimization algorithm to evaluate
run_count=24            // Set number of runs to perform (first run is equal to set time_seed)

// Initial start point for the algorithm, initial_start_file_address only used if random_start is set to "false"
random_start=true
initial_start_file_address=../Config_Constants/optimizedVector.bin // optimizedVector.bin probably shouldn't be used as it is from Summer 2019 and not reflective of Summer 2020 changes


//////////////////////////////////////////////////////////////////////// -- RUNGE KUTTA -- /////////////////////////////////////////////////////////////////////////////
// Various values that impact runge kutta
rk_tol=1e-12
doublePrecThresh=1e-12
GuessMaxPossibleSteps=1000000 //TODO: Long term, I think we need to get rid of this, we use max_numsteps instead...... 6/28/22: Have we done this? 
max_numsteps=1600
min_numsteps=400


//////////////////////////////////////////////////////////////////// -- POOL & THREAD BLOCK -- /////////////////////////////////////////////////////////////////////////
// Pool Size and Thread Block Size - Recommended to not change these values!
num_individuals=1440
// survivor_count needs to be 1/4 of the num_individuals
survivor_count=360
thread_block_size=32


////////////////////////////////////////////////////////////////////////// -- OUTPUT -- /////////////////////////////////////////////////////////////////////////////////
record_mode=true // Determines if recordGenerationPerformance() is called at all in a run
write_freq=1     // how frequent between generations to calls recordGenerationPerformance()
all_write_freq=200  //How frequent between generations to call recordAllIndividuals()
disp_freq=25     // how frequent between generations to call terminalDisplay(), does not impact the output for declaring changes to anneal or dRate


///////////////////////////////////////////////////////////////////////// -- SPACECRAFT -- ///////////////////////////////////////////////////////////////////////////////
thruster_type=1 // Thruster: 0 is none and 1 is NEXT ion thruster

dry_mass=325    // Mass of the spacecraft without fuel (kg)
fuel_mass=325   // Mass of the fuel that spacecraft will have (kg)



/////////////////////////////////////////////////////////////////////////// -- MISSION -- ////////////////////////////////////////////////////////////////////////////////
//Landing types
// Mission Types: "2" - indicates a soft landing on a body, "1" - indicates a crash at a high speed into a body
missionType=2

//Insert either the config file for the destination, e.g., bennu.config or didymos.config
destination=bennu.config

// Determines initial velocity magnitude
c3scale=1.0
c3energy=4.676e6         // DART mission value
v_impact=4.399378072e-08 // DART mission value


////////////////////////////////////////////////////////////////////// -- GENETIC ALGORITHM -- ///////////////////////////////////////////////////////////////////////////
// When random_start=true, these are the maximum ranges for the initial parameter guesses (+/- of these values)
gamma_random_start_range=3.14159
tau_random_start_range=1.570795
coast_random_start_range=3.14159
triptime_max=2.0
triptime_min=1.0
alpha_random_start_range=3.14159
beta_random_start_range=3.14159    // beta operates differently, not allowing negative values so the range is from 0 to beta_random_start_range
zeta_random_start_range=1.570795


sortingRatio=0.5 // ratio of best individuals by posDiff to those by speedDiff chosen for survivor pool (0.5 is half and half)

// Mutation Rate and scales for specific parameter types
mutation_amplitude=1

// Duplicate and Default mutation scales will allow for different rates of mutation between new children and duplicate adults
default_mutation_chance=0.75         //Set at one to allow for the mutation scales below to be applied normally/to children at face value
duplicate_mutation_chance=1       //To get rid of a duplicate, we need to mutate it every time


// Guesses at what should be used. More work could be done to optimized
// Scale determines min/max possible change to value per mutation
gamma_mutate_scale=3.14159
tau_mutate_scale=1.570795
coast_mutate_scale=3.14159
//triptime_mutate_scale=triptime_max-triptime_min
triptime_mutate_scale=1.0
zeta_mutate_scale=1.570795
beta_mutate_scale=1.570795
alpha_mutate_scale=3.14159

// Anneal determination properties
anneal_factor=0.75                  //Used to reduce currentAnneal (in optimization) when a run has hit a barrier
anneal_initial=8.0e-4               //The starting point of anneal & mutations
anneal_final=1.0e-7                 //The lowest anneal can be reduced to
change_check=50                     //How frequently the program checks if there's a change in the best individual

max_age=2500                        //Limit on how old an adult can get

posDominationTolerance=1.0e-14      //How close 2 posDiffs need to be to eachother to be considered "equal"
speedDominationTolerance=1.0e-14    //How close 2 speedDiffs need to be to eachother to be considered "equal"

distanceTolerance=1.0e-14           //How small an adult's distance has to be for it to be conisdered a duplicate

/////////////////////////////////////////////////////////////////////////// -- OTHER -- //////////////////////////////////////////////////////////////////////////////////
timeRes=3600 // Earth Calculations Time Resolution Value
sun_r_min=0.8 //minimum distance the asteroid can get to the sun

// Algorithm Solution demands
best_count=1                    //Number of individuals that must converge before the program decides it's successful
pos_threshold=1.0e-10           //Position-Based tolerance to determine if impact/rendevouz missions are successful
speed_threshold=1.0e-11         //SpeedDiff-Based tolerance to determine if rendevouz missions are successful
cost_threshold=1.0e-10          //The cost goal, will be used to determine how close the current cost is to the goal; used to calculate the anneal
coast_threshold=0.5             //Determines if thruster is on or off based on coast coefficient