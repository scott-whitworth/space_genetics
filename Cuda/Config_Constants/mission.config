/////////////////////////////////////////////////////////////////////////// -- MISSION -- ////////////////////////////////////////////////////////////////////////////////

//Mission objective selection
//  Structure: include the objective name, the desired goal, the convergence threshold, the domination threshold, and the equate tolerance, separated by commas
//      NAME: The name of the objective, which will show up in outputs
//
//      GOAL: The desired goal of the Objective, options are below
//          * MIN_POS_DIFF: Minimize the final position difference between the target and the craft (Au)
//          * MIN_SPEED_DIFF: Minimize the final speed difference between the target and the craft (Au/s)
//          * MIN_ORBIT_POS_DIFF: Minimize the final difference between the orbital distance from the target and the craft (Au)
//          * MIN_ORBIT_SPEED_DIFF: Minimize the final difference between the desired orbital velocity around the target and the craft's velocity (Au/s)
//              NOTE: If using sorting by posDiff or speedDiff, set the orbitalRadius and orbitalSpeed both to -1 (NOT_APPLICABLE)
//                    If orbitalRadius and orbitalSpeed are not -1, it will calculate speedDiff and posDiff for an orbital mission,
//                      not a rendezvous or impact mission
//                    The orbital radius and speed should be set to -1 by default, however it may be worth making sure they are set to -1 of non-orbit config files
//          * MIN_FUEL_SPENT: Minimize the fuel used by the spacecraft during the simulation (Kg)
//          * MIN_TRIP_TIME: Minimize the trip time of the simulations ((s))
//              NOTE: This goal does not work well, likely due to a fluke of how optimization works (see the 2022 worklog for more detail)
//                    The recommendation is to modify min and max triptime instead and let the other goals optimize around the constraint
//                    If used, the thresholds are in seconds, not years 
//          * MAX_SPEED_DIFF: Maximizes the final difference between the target velocity and the craft's velocity (Au/s)
// 
//      CONVERGENCE THRESHOLD: The value which will be the bar for when the objective is considered solved
//          * An individual who has parameters better than all convergence thresholds, it will be considered converged
//
//      DOMINATION THRESHOLD: The value which is the bar for which two individuals are compared to eachother
//          * If two individuals have parameters which are under the domination threshold for a goal, the goal will not be considered when determining domination 
//              NOTE: This means that the domination threshold must be at least marginally better than the convergence threshold for the goal to ever be solved
//
//      EQUATE TOLERANCE: How precise values for this goal will be compared
//          * If two individual's parameters for a goal have a difference less than the equate tolerance, they will be considered equal for that goal 
//
//      EXAMPLE GOALS:
//          * positionDifference, min_pos_diff, 1e-10, 1e-12, 1e-14
//          * fuel_spent, MIN_FUEL_SPENT, 120, 90, 0.1

Mission_Objectives:
    orbitPosDiff, min_orbit_pos_diff, 1.31e-8, 5e-9, 1e-14
    orbitSpeedDiff, min_orbit_speed_diff, 5.86E-11, 1e-11, 1e-14
    maxOrbitAssist, max_orbit_asst, 1.4e-8, 7.0e-8, 1e-14
//NOTE: There must be an empty line or a comment after the last objective

//Insert either the config file for the destination, e.g., bennu.config or didymos.config
destination=psyche.config

//posDiff, min_pos_diff, 1e-11, 5e-12, 1e-14
//speedDiff, min_speed_diff, 1e-10, 5e-11, 1e-14
//speedDiff, max_speed_diff, 4.4e-8, 8.0e-8, 1e-14
//orbitPosDiff, min_orbit_pos_diff, 1.31e-8, 5e-9, 1e-14
//orbitSpeedDiff, min_orbit_speed_diff, 5.86E-11, 1e-11, 1e-14
//maxOrbitAssist, max_orbit_asst, 1.4e-8, 7.0e-8, 1e-14
//minMarsDist, min_mars_dist, 3.8585e-4, 2.6002515E-05, 1e-14